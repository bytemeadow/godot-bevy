name: benchmark comment

on:
  workflow_run:
    workflows: ["ci"]
    types:
      - completed

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  comment:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    
    steps:
      - name: Download benchmark results
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
          name: benchmark-results
          path: benchmark-results/
      
      - name: Check if this is a PR with benchmark results
        id: check
        run: |
          if [ -f "benchmark-results/pr_number.txt" ]; then
            echo "is_pr=true" >> $GITHUB_OUTPUT
            echo "pr_number=$(cat benchmark-results/pr_number.txt)" >> $GITHUB_OUTPUT
            echo "pr_sha=$(cat benchmark-results/pr_sha.txt)" >> $GITHUB_OUTPUT
          else
            echo "is_pr=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Comment PR with results
        if: steps.check.outputs.is_pr == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read benchmark results
            const resultsDir = 'benchmark-results/examples/boids-perf-test/benchmark_results';
            if (!fs.existsSync(resultsDir)) {
              console.log('No benchmark results directory found');
              return;
            }
            
            const files = fs.readdirSync(resultsDir).filter(f => f.startsWith('full_comparison_')).sort().reverse();

            if (files.length === 0) {
              console.log('No benchmark result files found');
              return;
            }

            const resultsPath = path.join(resultsDir, files[0]);
            const data = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));

            const analysis = data.analysis || {};
            const ratios = analysis.performance_ratios || {};

            let comment = "## ðŸ“Š Benchmark Results\n\n";

            if (Object.keys(ratios).length > 0) {
              comment += "| Boid Count | Godot FPS | +Bevy FPS | Speedup |\n";
              comment += "|------------|-----------|----------|----------|\n";

              for (const [count, r] of Object.entries(ratios).sort((a, b) => Number(a[0]) - Number(b[0]))) {
                comment += `| ${Number(count).toLocaleString()} | ${r.godot_fps.toFixed(1)} | ${r.bevy_fps.toFixed(1)} | **${r.speedup.toFixed(2)}x** |\n`;
              }
            }

            if (analysis.summary) {
              const s = analysis.summary;
              comment += `\n**Average Speedup**: ${s.avg_speedup.toFixed(2)}x\n`;
              comment += `**Range**: ${s.min_speedup.toFixed(2)}x - ${s.max_speedup.toFixed(2)}x\n`;
            }

            comment += "\n<sub>ðŸ¤– Generated by godot-bevy CI</sub>";

            const prNumber = ${{ steps.check.outputs.pr_number }};

            // Find existing comment or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('ðŸ“Š Benchmark Results')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment,
              });
              console.log('Updated existing benchmark comment');
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment,
              });
              console.log('Created new benchmark comment');
            }